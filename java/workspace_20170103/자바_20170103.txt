break 문
- switch, for, while, do~while 문에만 영향을 미친다
  정상적인 진행을 하다 어떤 조건을 만족할 경우에
  가장 가까운 switch문이나 for문, while, do~while
  을 빠져 나간다 

스택 - 메모리 관리 기법, 시스템 관리
        (값변수들, int, char, boolean, float, double,
	 ... 기본 타입들 중에서 String 제외 나머지는 
	 다 값타입이다) 

힙 - 사용자에게 자유롭게 쓸 수 있도록 허용되는 메모리 
      참조타입 - 객체, 배열,String 

      int []arr;  //배열 참조 변수 선언 
      arr = new int[5]; //힙공간에 정수값 5개 저장될 
                                //공간 확보후 첫번째 방의 
				//번지값 전달 
     arr[0] = 1;  //방은 0번방부터 만들어진다  
     arr[1] = 2;  //데이타를 읽고 쓸때는 각 방을 지정
                      //인덱스를 꼭 붙여야 한다 


문제2) 배열 - 방 10개 짜리 만들고 여기에 7의 배수를 
쭉 채워서 출력하기 


검색 알고리즘 - 내가 원하는 데이타 있는곳을 찾는방법 
1)선형알고리즘 (순차, sequecial, linear) 
- 처음부터 데이타 나올때까지 차례차례 데이타를 읽어나가
  는 방법, 프로그램이 쉬움, 느림  
2)이분검색
-데이타를 먼저 정렬한다  
-정렬된 데이타를 기반으로 해서 데이타를 이분화시켜서
찾고자 하는 데이타가 어느쪽인지 판단해서 절반씩 
버리면서 검색하는 방법 
3)해쉬검색 
-이론상 단한번에 검색 가능한 알고리즘 
-데이타를 가공해서 반드시 특정 메모리로 들어가도록 하는
방법
4)이진트리검색 
5)색인순차검색
-색인표(데이타 요약본)를 만들어서 검색하는 방법 
 훨씬 속도가 빠르다 

boolean find=false;//못찾은 상태
for(i=0; i<배열의크기; i++)
{
   if(배열[i] == 찾고자하는값)
   {
	find = true; //찾았다 
	break;
   }
}
//배열의 끝까지 못찾았던지, 찾았던지 
if (find)  //찾은 상태 처리 
{}
else
{}        //못찾은 상태 처리 


이차원배열 
문제1) 5 X 5

   1   2   3   4     10
   5   6   7   8     26
   9  10  11  12   42
   13 14 15 16    58
   28 32  36 40   136


   1 0 0 0 0 0 0 0 0 0 0 
   2 3 0 0 0 0 0 0 0 0 0
   4 5 6 0 0 0 0 0 0 0 0 0
   7 8 9 10 
   11 12 13 14 15







