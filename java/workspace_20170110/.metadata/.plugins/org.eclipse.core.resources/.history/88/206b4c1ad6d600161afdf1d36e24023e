package 상속1;

class Parent
{
	private int x;
	protected int y;
	public int z;
	//부모클래스에서 물려받은 변수나 함수가 맘에 안들면
	//다시 정의할 수 있다 overriding 
	/*
	 * overloading : 동일 클래스내에서 이름이 같고 형태가
	 *               다른 함수들   
	 * overriding  : 상속관계에서 부모 클래스의 메서드를 
	 *               다시 정의한것
	 *               
	 * 어노테이션 : 일종의 주석, @로 시작한다 
	 *             자바가 컴파일할때 특정한 지시를 하고자
	 *             할때 사용한다. 직접 어노테이션을 
	 *             자바클래스를 이용해 만들어 쓸 수도
	 *             있다 무시하면 안됨, 때로는 전체 
	 *             소스에 영향을 미치는 경우도 많음
	 *             자바 1.5부터 도입되었음 
	 *           @Override - 부모클래스로부터 물려받은
	 *           함수(메서드)를 재정의 할때 필요하다
	 *           없어도 되는데 이걸 붙여야 하는 이유는
	 *           부모 클래스의 메서드와 똑같은 이름 
	 *           똑같은 타입, 매개변수 즉 형태가 똑같아야
	 *           overriding 인데 잘못 만들어도 컴파일러가
	 *           알수가 없다. 그래서 @Override를 붙여주면
	 *           개발자가 오버라이딩을 잘못 했을때 
	 *           이를 알려준다 
	 *           
	 */
	
	
	public String toString() {
		
		return super.toString();
	}
}

public class TestMain {
	public static void main(String[] args) {
		Parent p = new Parent();
		String s="";
		Object ob = new Object();
		
	//	p.x = 10;
		p.y = 20; 
		p.z = 30;
		
		System.out.println(p);
		System.out.println(p.toString());
		
	}
}






