구조적프로그래밍 - 모듈화(프로그램을 작게 나누어서 작업함)
- 함수(메서드) 

추상화 <-> 구체화
  내부구조를 잘 모르는데 쓰는것이 가능하도록 만드는것을 
  추상화라 한다 
  String 클래스 - 만드는 방법 몰라도 쓰는데 아무 지장없도록
  클래스
  class String
  {
	char []buffer;
	int len;
	public String toUpperCase();
	...
  }

 은닉성(캡슐화) : 데이타 보호와 관련이 깊다
   private, public

 상속성 : 모든 클래스를 새로 만드는게 아니라 
             이미 존재하는 클래스를 상속받아 
	     쉽게 새로운 클래스를 만들 수 있다 
	   (코드의 재사용성)

다형성 : 여러가지 형태의 메서드를 만들 수 있다 
          오버로딩(이름이 같으면서 형태가 다른 함수들)
	  오버라이딩(상속받아서 다시 정의된 함수들) 
